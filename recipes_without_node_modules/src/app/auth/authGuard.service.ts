import { Injectable } from "@angular/core";

import { ActivatedRouteSnapshot, RouterStateSnapshot,CanActivate, CanLoad,Route } from "@angular/router";
// import { AuthenticationService } from "./auth.service";
import {Store} from '@ngrx/store';  
import * as fromApp from '../store/app.reducers';
import * as fromAuth from '../auth/store/auth.reducers';
import 'rxjs/add/operator/take';


@Injectable()
export class AuthGuard implements CanActivate,CanLoad {
    constructor(private store:Store<fromApp.AppState>){}

    canActivate(route:ActivatedRouteSnapshot,state:RouterStateSnapshot){
        return this.store.select('auth')
        .take(1)
        .map((authState:fromAuth.State) =>{
            
            return authState.isAuthenticated;
        })
    }
    canLoad(route: Route) {
        // let token =this.authenticationService.isAuthenticated()
        // if(!token){
        //     alert('please login to continue');
        // }


        return this.store.select('auth').map((authState:fromAuth.State) =>{
            return authState.isAuthenticated;
        })
      }
}