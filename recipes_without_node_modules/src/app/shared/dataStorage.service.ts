import { Injectable } from "@angular/core";
import { HttpClient, HttpParams, HttpRequest } from '@angular/common/http';
import { RecipieService } from "../recipes/recipie.service";
import { Recipe } from "../recipes/recipe.model";
import {Observable } from "rxjs/Observable";
import 'rxjs/add/operator/map'
// import { AuthenticationService } from "../auth/auth.service";


@Injectable()
export class DataStorage {

    constructor(private httpClient:HttpClient,
        private recipesService:RecipieService
       ){}

    storeRecipes(){
       
        //  return this.httpClient.put('https://ng-recipe-app-d18f8.firebaseio.com/recipes.json',
        //  this.recipesService.getRecipies(),
        //  {
        //     observe:'body',
        //     params:new HttpParams().set('auth',token)
        //  })

        const req =new HttpRequest('PUT','https://ng-recipe-app-d18f8.firebaseio.com/recipes.json',
        this.recipesService.getRecipies(),{reportProgress:true} );

        return this.httpClient.request(req);
    }

    getRecipes(){
        
    //    this.httpClient.get<Recipe[]>('https://ng-recipe-app-d18f8.firebaseio.com/recipes.json?auth=' + token)
       this.httpClient.get<Recipe[]>('https://g-recipe-app-d18f8.firebaseio.com/recipes.json')
      
       .map( 
           (recipes) =>{
            console.log(recipes);
           for(let recipe of recipes){
              
               if(!recipe['ingredients']){
                console.log(recipe);
                   recipe['ingredients']=[];
               }
           }
           return recipes
           
        }
       )
        .subscribe(
            (recipes:Recipe[]) => {
               
                this.recipesService.onSetRecipes(recipes);
                
            }
        )
    }
}