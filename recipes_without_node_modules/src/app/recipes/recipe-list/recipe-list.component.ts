import { Component, OnInit,OnDestroy} from '@angular/core';
import {Store} from '@ngrx/store';
// import { Recipe } from '../recipe.model';

// import {RecipieService} from '../recipie.service';

import { Router,ActivatedRoute } from '@angular/router';
// import { Subscription } from 'rxjs/Subscription';
import * as fromRecipe from '../store/recipe.reducers';
import { Observable } from 'rxjs/Observable';
// import { AuthenticationService } from '../../auth/auth.service';
// import {Store} from '' 


@Component({
  selector: 'app-recipe-list',
  templateUrl: './recipe-list.component.html',
  styleUrls: ['./recipe-list.component.css']
})
export class RecipeListComponent implements OnInit {
  // @Output() selectedRecipe= new EventEmitter<Recipe>();
  recipeState:Observable<fromRecipe.State>
  

  constructor( 
    private router:Router,
    private route:ActivatedRoute,
    private store:Store<fromRecipe.FeatureState>
    ) { }

  ngOnInit() {
    
    // this.subscription= this.recipieService.recipieChanged.subscribe(
    //   (recipes:Recipe[]) => {
    //     this.recipes=recipes;
    //   }
    // )
    this.recipeState = this.store.select('recipes');
  
  
    // this.router.navigate(['/signin']);
  }

  onNewRecipe(){
    // if(!this.authenticationService.isAuthenticated()){
    //   this.router.navigate(['/signin'])
    // }
    // else {
    
      this.router.navigate(['new'], {relativeTo:this.route})
    
   
  }
  
 
}
