import { Injectable } from '@angular/core';
import { Recipe} from './recipe.model';


import { Subject } from 'rxjs/Subject';

import { Ingredient } from '../shared/ingredient.model';
// import { ShoppingListService } from '../shopping-list/shopping-list.service';




@Injectable()
export class RecipieService {
    recipieChanged = new Subject<Recipe[]>();
  
    constructor (){}
   private recipes: Recipe[] = [
        new Recipe('A Tasty Burger', 
        'This is simply a test', 
        'https://www.peta.org/wp-content/uploads/2013/10/500x333_2D00_gardein-burger_5F00_onions-mushrooms-and-vegan-cheese.jpg',
        [
          new Ingredient('beans',2),
          new Ingredient('Meat',4),  
          
        ]),
        new Recipe('A cheeze Pizza', 'This is simply a test', 'https://thumbs.dreamstime.com/z/cheese-pizza-stone-baked-mozzarella-pesto-white-36252460.jpg',
    
        [
            new Ingredient('Peas',2),
            new Ingredient('Meat',6),  
            
          ])
      ];

    getRecipies(){
        return this.recipes.slice();
    }

    getRecipie(index:number){
        return this.recipes[index];
    }

    OnAddingToShoppingList(selectedIngredient:Ingredient[]){
        // for (let i =0;i<selectedIngredient.length;i++){
               
        //     this.slService.addNewIngredients(selectedIngredient[i]);
        // }
        // this.slService.addIngredients(selectedIngredient);
    }


    // onRecipieSelected(recipie:Recipe){
    //     this.selectedRecipie.emit(recipie);
    
    //   }

    onAddRecipie(recipie:Recipe){
        this.recipes.push(recipie);
        this.recipieChanged.next(this.recipes.slice());

    }

    updateExistingRecipie(index:number,newrecipie:Recipe){
        this.recipes[index]=newrecipie;
        this.recipieChanged.next(this.recipes.slice());

    }

    onDeleteRecipe(index:number){
            this.recipes.splice(index,1);
            this.recipieChanged.next(this.recipes);
    }

    onSetRecipes(recipes:Recipe[]){
        this.recipes=recipes;
        this.recipieChanged.next(this.recipes.slice());
    }



}