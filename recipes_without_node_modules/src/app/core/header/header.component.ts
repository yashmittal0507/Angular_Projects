import { Component, OnInit} from '@angular/core';
import {Store} from '@ngrx/store';
import { DataStorage } from '../../shared/dataStorage.service';
// import { AuthenticationService } from '../../auth/auth.service';

import * as fromApp from '../../store/app.reducers';
import { Observable } from 'rxjs/Observable';
import * as fromAuth from '../../auth/store/auth.reducers';

import * as fromAuthActions from '../../auth/store/auth.actions';
import * as fromRecipe from '../../recipes/store/recipe.reducers';
import * as fromRecipeActions from '../../recipes/store/recipe.actions';

@Component({
  selector: 'app-header',
  templateUrl: './header.component.html'
})
export class HeaderComponent implements OnInit{
  // @Output() featureselected = new EventEmitter<string>();
  // onSelect(feature:string){
  //   this.featureselected.emit(feature);
  // }

  authState:Observable<fromAuth.State>;
  constructor(private datastorage:DataStorage,
  private store:Store<fromApp.AppState>){}
  onSaveData(){
    // this.datastorage.storeRecipes()
    // .subscribe(
    //   (response) =>{
    //     console.log(response)
    //   }
    // )
    this.store.dispatch(new fromRecipeActions.StoreRecipes());
  }

  ngOnInit(){
    this.authState =this.store.select('auth');
  }
  onGetData(){
    // this.datastorage.getRecipes();
    this.store.dispatch(new fromRecipeActions.GetRecipes());
  }

  onLogout(){
    this.store.dispatch(new fromAuthActions.LogOut());
  }
  
}
