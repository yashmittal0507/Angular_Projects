import { Component, OnInit,OnDestroy } from '@angular/core';

import { Ingredient } from '../shared/ingredient.model';

import { Subscription } from 'rxjs/Subscription';
// import { ShoppingListService } from './shopping-list.service';
import { Store } from '@ngrx/store';
import { Observable } from 'rxjs/Observable';
import * as fromShoppingList from './store/shopping-list.reducer';
import * as shoppingListActions from './store/shopping-list.actions';
import * as fromApp from '../store/app.reducers';



@Component({
  selector: 'app-shopping-list',
  templateUrl: './shopping-list.component.html',
  styleUrls: ['./shopping-list.component.css']
  
})
export class ShoppingListComponent implements OnInit,OnDestroy {
  shoppingListState:Observable<{ingredients:Ingredient[]}>;
  subscription:Subscription;

  constructor( 
  private store:Store<fromApp.AppState>) { }

  ngOnInit() {
     this.shoppingListState = this.store.select('shoppingList');
  //  this.subscription= this.shoppingListService.ingredientsChanged.subscribe(
  //     (ingredients:Ingredient[]) => {
  //           this.ingredients =ingredients;
  //     }
  //   );
  }


  onSelected(index:number){
    // this.shoppingListService.startedEditing.next(index);
    this.store.dispatch(new shoppingListActions.EditedIngredients(index));
  }

 ngOnDestroy(){
  //  this.subscription.unsubscribe();
 }

 
  

}
