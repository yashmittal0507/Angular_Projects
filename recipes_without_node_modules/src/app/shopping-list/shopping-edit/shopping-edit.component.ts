import { Component,OnInit,OnDestroy,ViewChild} from '@angular/core';
import { NgForm } from '@angular/forms';
import { Subscription } from 'rxjs/Subscription';

import {Ingredient} from '../../shared/ingredient.model';
// import { ShoppingListService } from '../shopping-list.service';
import { Store } from '@ngrx/store';

import * as shoppingListActions from '../store/shopping-list.actions';
import * as fromShoppingList from '../store/shopping-list.reducer';

import * as fromApp from '../../store/app.reducers';


@Component({
  selector: 'app-shopping-edit',
  templateUrl: './shopping-edit.component.html',
  styleUrls: ['./shopping-edit.component.css']
})
export class ShoppingEditComponent implements OnInit {
  // @ViewChild('nameInput') nameInputRef:ElementRef;
  // @ViewChild('amountInput') amountInputRef:ElementRef;
  // @Output() newlyaddedIngredient=new EventEmitter<Ingredient>();
subscription :Subscription;
editMode=false;
// editedModeIndex;
editedField;

@ViewChild('f') slForm:NgForm
  constructor(
  private store:Store<fromApp.AppState>) {}

  ngOnInit() {
    
    this.subscription = this.store.select('shoppingList').subscribe(
      data => {
        if(data.editedIngredientIndex> -1){
        this.editedField = data.editedIngredient;
        this.slForm.setValue({
          name:this.editedField.name,
          amount:this.editedField.amount
        })
        this.editMode=true;
      }
      else {
          this.editMode=false;
      }
    })
    }
    // this.subscription = this.shoppingListService.startedEditing.subscribe(
    //   (index:number) => {
    //     console.log('value_changed');
    //     this.editedModeIndex=index;  
    //     this.editMode=true;
    //     this.editedField = this.shoppingListService.getIngredient(index);
    //     this.slForm.setValue({
    //       name:this.editedField.name,
    //       amount:this.editedField.amount
    //     })
          
    //   }
    // )
  
  onAdd(form:NgForm){
   const value =form.value
    const addedingredients = new Ingredient(value.name,value.amount);
    
    if(this.editMode){
      // this.shoppingListService.updateIngredient(this.editedModeIndex,addedingredients)
      this.store.dispatch(new shoppingListActions.UpdateIngredients({ingredient:addedingredients}));
     
    }
    else {
    // this.shoppingListService.addIngredient(addedingredients);
    this.store.dispatch(new shoppingListActions.AddIngredient(addedingredients));
    
    }
     this.editMode=false;
     form.reset();


 }

 onClear(){
   this.slForm.reset();
   this.editMode=false;
 }

 onDelete(){
  //  this.shoppingListService.deleteIngredient(this.editedModeIndex);
  this.store.dispatch(new shoppingListActions.DeleteIngredients());
   this.onClear();
 }
  
 ngOnDestroy(){
  //  this.subscription.unsubscribe();
  this.store.dispatch(new shoppingListActions.StopEdit())
 }


}
